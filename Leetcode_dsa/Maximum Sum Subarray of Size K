/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var maximumSubarraySum = function(nums, k) {
    let mp = new Map();
    let maxSum = 0, sum = 0;
    
    for (let i = 0; i < nums.length; i++) {
        sum += nums[i];
        mp.set(nums[i], (mp.get(nums[i]) || 0) + 1);
        
        if (i >= k - 1) {
            if (mp.size === k) maxSum = Math.max(maxSum, sum);
            sum -= nums[i - k + 1];
            let count = mp.get(nums[i - k + 1]) - 1;
            if (count === 0) {
                mp.delete(nums[i - k + 1]);
            } else {
                mp.set(nums[i - k + 1], count);
            }
        }
    }
    
    return maxSum;
};
